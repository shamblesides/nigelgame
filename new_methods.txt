new pxcan(element)

pxcan.id
pxcan.element
pxcan.canvas
pxcan.context
pxcan.canvasOffX, pxcan.canvasOffY = 0

pxcan.left, pxcan.right
pxcan.top, pxcan.bottom
pxcan.width
pxcan.height

pxcan.origin().{x, y}
pxcan.origin(x, y)
pxcan.offset().{x, y}
pxcan.offset(x, y)

pxcan.drawScale
pxcan.wasResized

pxcan.clock
pxcan.frameskip

pxcan.mode()
pxcan.mode('adapt', [scale])
  pxcan.setScale(scale)
pxcan.mode('fixed', [[width, height,] scale])
  pxcan.setSize(width, height)
  pxcan.setScale(scale)
// pxcan.mode('scale')
// pxcan.mode('scale', width, height)
  // pxcan.setSize(width, height)
pxcan.mode('scale-overflow', [width, height])
  pxcan.setSize(width, height)
  // pxcan.setMaxOverflow(width, height)

pxcan.setSize(width, height)
pxcan.setScale(scale)
pxcan.fitElement()

pxcan.panel(x, y, width, height, [xAnchor, yAnchor]).{
  screen
  element
  canvas
  context
  drawScale
  sheet(...)
  left, right
  top, bottom
  width
  height
  font
  origin(...)
  offset(...)
  panel(...)
}

pxcan.reset()
pxcan.setBackground(bg)
pxcan.clear([x, y, w, h, [xAnchor, yAnchor]])
pxcan.fill(color, [x, y, w, h, [xAnchor, yAnchor]])
pxcan.blit(sheet, frame, [flip,] x, y, [xAnchor, yAnchor])
pxcan.write(text, x, y, [xAnchor, yAnchor,] [align])
pxcan.font
pxcan.border(borderSheet)

pxcan.preload(src, alias, width, height)
pxcan.isPreloading
pxcan.hasSheet(alias)
pxcan.sheet(alias).{
  alias,
  img,
  src,
  left = 0
  top = 0
  width,
  height,
  spriteWidth,
  spriteHeight,
  numCols,
  numRows,
  numSprites
  scaledImage(scale)
  getSprite(frame).{
    sheet,
    img,
    left,
    top,
    width,
    height,
    scaledImage(scale)
  }
}

pxcan.onReady
pxcan.onFrame

pxcan.bind(button, ...keys)
pxcan.button(button).{ wasPressed, wasReleased, isDown, framesDown }
pxcan.touch{
  changed,
  isDown,
  isMouse,
  isRightClick,
  wasStarted,
  moved,
  isDrag,
  wasReleased,
  wasInterrupted,
  (cur=<this>, last, start).{
    x, y,
    inBounds,
    rel(ref, bounded),
    bounded(),
    unBounded()
  }
}

pxcan.hasFocus

--- STATIC ---

pxcan..generateId()

pxcan..preload(src, pxc=null)
pxcan..hasImage(src)
pxcan..image(src)
pxcan..scaledImage(src, scale)

pxcan..globalSheets[]

pxcan..wrapString(str, width, maxLines)

pxMath..mid(...numbers)
pxMath..clamp(val, [min,] max)

pxcan..random()
pxcan..random.create([seed])
pxcan..random.seed(seed)