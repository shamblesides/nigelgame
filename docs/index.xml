<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pxcan.js Docs</title>
    <link>http://www.nigel.fyi/pxcan/</link>
    <description>Recent content on pxcan.js Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Wed, 20 Jul 2016 17:39:41 -0600</lastBuildDate>
    
	<atom:link href="http://www.nigel.fyi/pxcan/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>http://www.nigel.fyi/pxcan/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.nigel.fyi/pxcan/introduction/</guid>
      <description>This is pxcan.js.</description>
    </item>
    
    <item>
      <title>Examples</title>
      <link>http://www.nigel.fyi/pxcan/examples/</link>
      <pubDate>Wed, 20 Jul 2016 17:39:41 -0600</pubDate>
      
      <guid>http://www.nigel.fyi/pxcan/examples/</guid>
      <description>Buttons This example demonstrates how to check if the player has just pressed, just released, or is currently holding down a button.
 // initialize the screen var screen = new pxcan(&amp;quot;#button-example&amp;quot;); screen.setBackground(&amp;quot;black&amp;quot;); // bind a new button called &amp;quot;myButton&amp;quot; to the Z, X, and SPACE keys screen.bind(&#39;myButton&#39;, &#39;z&#39;, &#39;x&#39;, &#39; &#39;); // each frame... screen.onFrame = function() { // erase the screen this.reset(); // show a red rectangle if the button is FIRST PRESSED during this frame if(this.</description>
    </item>
    
  </channel>
</rss>